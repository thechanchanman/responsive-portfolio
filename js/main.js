+function(t){"use strict";var s=function(e,i){this.$element=t(e),this.options=t.extend({},s.DEFAULTS,i),this.state=null,this.placement=null,this.options.recalc&&(this.calcClone(),t(window).on("resize",t.proxy(this.recalc,this))),this.options.autohide&&t(document).on("click",t.proxy(this.autohide,this)),this.options.toggle&&this.toggle(),this.options.disablescrolling&&(this.options.disableScrolling=this.options.disablescrolling,delete this.options.disablescrolling)};s.DEFAULTS={toggle:!0,placement:"auto",autohide:!0,recalc:!0,disableScrolling:!0},s.prototype.offset=function(){switch(this.placement){case"left":case"right":return this.$element.outerWidth();case"top":case"bottom":return this.$element.outerHeight()}},s.prototype.calcPlacement=function(){function s(t,s){return"auto"===n.css(s)?t:"auto"===n.css(t)?s:parseInt(n.css(t),10)>parseInt(n.css(s),10)?s:t}if("auto"!==this.options.placement)return void(this.placement=this.options.placement);this.$element.hasClass("in")||this.$element.css("visiblity","hidden !important").addClass("in");var e=t(window).width()/this.$element.width(),i=t(window).height()/this.$element.height(),n=this.$element;this.placement=e>=i?s("left","right"):s("top","bottom"),"hidden !important"===this.$element.css("visibility")&&this.$element.removeClass("in").css("visiblity","")},s.prototype.opposite=function(t){switch(t){case"top":return"bottom";case"left":return"right";case"bottom":return"top";case"right":return"left"}},s.prototype.getCanvasElements=function(){var s=this.options.canvas?t(this.options.canvas):this.$element,e=s.find("*").filter(function(){return"fixed"===t(this).css("position")}).not(this.options.exclude);return s.add(e)},s.prototype.slide=function(s,e,i){if(!t.support.transition){var n={};return n[this.placement]="+="+e,s.animate(n,350,i)}var a=this.placement,o=this.opposite(a);s.each(function(){"auto"!==t(this).css(a)&&t(this).css(a,(parseInt(t(this).css(a),10)||0)+e),"auto"!==t(this).css(o)&&t(this).css(o,(parseInt(t(this).css(o),10)||0)-e)}),this.$element.one(t.support.transition.end,i).emulateTransitionEnd(350)},s.prototype.disableScrolling=function(){var s=t("body").width(),e="padding-"+this.opposite(this.placement);if(void 0===t("body").data("offcanvas-style")&&t("body").data("offcanvas-style",t("body").attr("style")||""),t("body").css("overflow","hidden"),t("body").width()>s){var i=parseInt(t("body").css(e),10)+t("body").width()-s;setTimeout(function(){t("body").css(e,i)},1)}},s.prototype.show=function(){if(!this.state){var s=t.Event("show.bs.offcanvas");if(this.$element.trigger(s),!s.isDefaultPrevented()){this.state="slide-in",this.calcPlacement();var e=this.getCanvasElements(),i=this.placement,n=this.opposite(i),a=this.offset();e.index(this.$element)!==-1&&(t(this.$element).data("offcanvas-style",t(this.$element).attr("style")||""),this.$element.css(i,-1*a),this.$element.css(i)),e.addClass("canvas-sliding").each(function(){void 0===t(this).data("offcanvas-style")&&t(this).data("offcanvas-style",t(this).attr("style")||""),"static"===t(this).css("position")&&t(this).css("position","relative"),"auto"!==t(this).css(i)&&"0px"!==t(this).css(i)||"auto"!==t(this).css(n)&&"0px"!==t(this).css(n)||t(this).css(i,0)}),this.options.disableScrolling&&this.disableScrolling();var o=function(){"slide-in"==this.state&&(this.state="slid",e.removeClass("canvas-sliding").addClass("canvas-slid"),this.$element.trigger("shown.bs.offcanvas"))};setTimeout(t.proxy(function(){this.$element.addClass("in"),this.slide(e,a,t.proxy(o,this))},this),1)}}},s.prototype.hide=function(s){if("slid"===this.state){var e=t.Event("hide.bs.offcanvas");if(this.$element.trigger(e),!e.isDefaultPrevented()){this.state="slide-out";var i=t(".canvas-slid"),n=(this.placement,-1*this.offset()),a=function(){"slide-out"==this.state&&(this.state=null,this.placement=null,this.$element.removeClass("in"),i.removeClass("canvas-sliding"),i.add(this.$element).add("body").each(function(){t(this).attr("style",t(this).data("offcanvas-style")).removeData("offcanvas-style")}),this.$element.trigger("hidden.bs.offcanvas"))};i.removeClass("canvas-slid").addClass("canvas-sliding"),setTimeout(t.proxy(function(){this.slide(i,n,t.proxy(a,this))},this),1)}}},s.prototype.toggle=function(){"slide-in"!==this.state&&"slide-out"!==this.state&&this["slid"===this.state?"hide":"show"]()},s.prototype.calcClone=function(){this.$calcClone=this.$element.clone().html("").addClass("offcanvas-clone").removeClass("in").appendTo(t("body"))},s.prototype.recalc=function(){if("none"!==this.$calcClone.css("display")&&("slid"===this.state||"slide-in"===this.state)){this.state=null,this.placement=null;var s=this.getCanvasElements();this.$element.removeClass("in"),s.removeClass("canvas-slid"),s.add(this.$element).add("body").each(function(){t(this).attr("style",t(this).data("offcanvas-style")).removeData("offcanvas-style")})}},s.prototype.autohide=function(s){0===t(s.target).closest(this.$element).length&&this.hide()};var e=t.fn.offcanvas;t.fn.offcanvas=function(e){return this.each(function(){var i=t(this),n=i.data("bs.offcanvas"),a=t.extend({},s.DEFAULTS,i.data(),"object"==typeof e&&e);n||i.data("bs.offcanvas",n=new s(this,a)),"string"==typeof e&&n[e]()})},t.fn.offcanvas.Constructor=s,t.fn.offcanvas.noConflict=function(){return t.fn.offcanvas=e,this},t(document).on("click.bs.offcanvas.data-api","[data-toggle=offcanvas]",function(s){var e,i=t(this),n=i.attr("data-target")||s.preventDefault()||(e=i.attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,""),a=t(n),o=a.data("bs.offcanvas"),l=o?"toggle":i.data();s.stopPropagation(),o?o.toggle():a.offcanvas(l)})}(window.jQuery),function(t){"use strict";function s(){var t=document.createElement("bootstrap"),s={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var e in s)if(void 0!==t.style[e])return{end:s[e]};return!1}t.fn.emulateTransitionEnd=function(s){var e=!1,i=this;t(this).one("bsTransitionEnd",function(){e=!0});var n=function(){e||t(i).trigger(t.support.transition.end)};return setTimeout(n,s),this},t(function(){t.support.transition=s(),t.support.transition&&(t.event.special.bsTransitionEnd={bindType:t.support.transition.end,delegateType:t.support.transition.end,handle:function(s){if(t(s.target).is(this))return s.handleObj.handler.apply(this,arguments)}})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
